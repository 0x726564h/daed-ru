name: Build Arm64 (Main)

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - .github/workflows/pr-build.yml
      - install/friendly-filenames.json
      - Makefile
      - wing
      - index.html
      - vite.config.ts
      - .npmrc
      - package.json
      - pnpm-lock.yaml

jobs:
  checkout-full-src:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.21'
      - run: go version
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download wing vendor
        run: |
          git submodule update --init --recursive
          export GOMODCACHE="${PWD}"/go-mod
          go mod download -modcacherw
          cd dae-core && go mod download -modcacherw && cd ..
          find "$GOMODCACHE" -maxdepth 1 ! -name "cache" ! -name "go-mod" -exec rm -rf {} \;
          sed -i 's/#export GOMODCACHE=$(PWD)\/go-mod/export GOMODCACHE=$(PWD)\/go-mod/' Makefile
        working-directory: wing

      - name: Create full source ZIP archive and Signature
        run: |
          zip -9vr daed-full-src.zip . -x .git/\*

      - name: Upload artifact - full source
        uses: actions/upload-artifact@v4
        with:
          name: daed-full-src.zip
          path: daed-full-src.zip

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3.0.0
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: latest

      - name: Build
        run: |
          pnpm install
          pnpm build

      - name: Upload artifact - web
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: dist
  build-bundle:
    needs: [build-web]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: arm64
      fail-fast: false

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      GOAMD64: ${{ matrix.goamd64 }}
      CGO_ENABLED: ${{ matrix.cgo_enabled || 0 }}
      CC: ${{ matrix.cc }}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.21'
      - run: go version
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: |
          date=$(git log -1 --format="%cd" --date=short | sed s/-//g)
          count=$(git rev-list --count HEAD)
          commit=$(git rev-parse --short HEAD)
          version="unstable-$date.r${count}.$commit"
          package_version="$date.r${count}.$commit"
          echo "VERSION=$version" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=$package_version" >> $GITHUB_OUTPUT

      - name: Get the filename
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH\"].friendlyName" -r < install/friendly-filenames.json)
          echo "BUNDLE_NAME=daed-$_NAME" >> $GITHUB_OUTPUT

      - name: Download artifact - web
        uses: actions/download-artifact@v4
        with:
          name: web
          path: dist/

      - name: make
        run: |
          mkdir -p ./bundled/
          export VERSION=${{ steps.get_version.outputs.VERSION }}
          export GOFLAGS="-trimpath -modcacherw"
          export OUTPUT=bundled/${{ steps.get_filename.outputs.BUNDLE_NAME }}
          make
          cp ./install/daed.service ./bundled/
          curl -L -o ./bundled/geoip.dat https://github.com/v2rayA/dist-v2ray-rules-dat/raw/master/geoip.dat
          curl -L -o ./bundled/geosite.dat https://github.com/v2rayA/dist-v2ray-rules-dat/raw/master/geosite.dat

      - name: Upload artifact - bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_filename.outputs.BUNDLE_NAME }}
          path: bundled/*
